---
title: Forms | Accessibility Guidelines
---
%h2.page-title
  Forms

%p From US Design Standards: group each set of thematically related controls in a fieldset element. Use the legend element to offer a label within each one. The fieldset and legend elements make it easier for screen reader users to navigate the form.

%p Labels can either wrap input elements or simply precede them.

%p Use required attribute and aria-required='true' or 'false' for form validation

%p Use the words: '(required),' 'required,' Required,' or '*'' [asterisk] next to an input so that it is clear to screenreaders that the field is required.

%p Submit button should have type = submit and have a clear actionable message title: Send Message, Submit Message, Subscribe…

%p Make helper text helpful! Saying you@yourdomain.com is helpful, but XXX-XXX-XXXX to represent a phone number sounds ridiculous when read by a screenreader (it literally says 'xxxxxxxxxx').  Perkins school for the blind does not use helper text and simply has a label for the input that says: Phone (required) and a max-length of 20.

:code
  # lang: html
  <form>
    <fieldset>
      <legend>Name</legend>

      <label for="title">Title</label>
      <input class="usa-input-tiny" id="title" name="title" type="text">

      <label for="first-name">First name <span class="usa-additional_text">Required*</span></label>
      <input id="first-name" name="first-name" type="text" required="" aria-required="true">

      <label for="middle-name">Middle name</label>
      <input id="middle-name" name="middle-name" type="text">

      <label for="last-name">Last name <span class="usa-additional_text">Required</span></label>
      <input id="last-name" name="last-name" type="text" required="" aria-required="true">

      <label for="suffix">Suffix</label>
      <input class="usa-input-tiny" id="suffix" name="suffix" type="text">
    </fieldset>

    <button type=’submit’> Submit </button>
  </form>

%h3 Form/Error Validation

%h4 Using CSS pseudo-classes
%p Using styling to show an incorrect form input before they submit, is also useful.

:code
  # lang: css
  input:invalid {
    box-shadow: 0 0 5px 1px red;
  }

  input:focus:invalid {
    outline: none;
  }

%form.form-example{method: :post}
  %fieldset
    %legend Personal Information
    %label{:for => "full-name"}
      Full Name
      %span.required (required)
      %span.error-message You must input a real name.
    %input{:type => "text", :name => 'full-name', :required => "", :id => 'full-name'}/
    %label{:for => "email"}
      Email
      %span.required (required)
      %span.error-message The email address you entered is not valid.
    %input{:type => "email", :name => 'email', :required => "", :id => 'email'}/

    %button{:type => "submit"} Submit

%h3 More Resources
%ul
  %li
    %a{:href => "https://www.paciellogroup.com/blog/2016/01/simple-inline-error-message-pattern/"} Simple inline error message pattern
  %li
    %a{:href => "https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Forms/Data_form_validation"} Data form validation
